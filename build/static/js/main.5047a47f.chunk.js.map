{"version":3,"sources":["components/Card/index.js","components/Jumbotron/index.js","components/Navbar/index.js","components/Grid/index.js","pages/Main.js","App.js","index.js"],"names":["Card","props","style","backgroundImage","image","react_default","a","createElement","role","className","onClick","checkGuess","id","Jumbotron","height","clear","paddingTop","textAlign","class","classState","message","Navbar","_ref","children","href","Container","_ref2","Game","state","clickedCards","images","imageIds","bestScore","currentScore","gameMessage","gameMessageClass","shuffleMe","anything","sort","b","Math","random","guessId","clickArray","_this","newScore","imageArr","indexOf","gameOver","length","youWin","push","newArr","setState","arr","this","_this2","components_Jumbotron","map","components_Card","key","name","Component","App","Main","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5047a47f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Card(props) {\r\n    var style = {\r\n        backgroundImage: \"url(\"+props.image+\")\"\r\n    }\r\n    return (\r\n<div role=\"img\" className=\"cusCard\" onClick={() => props.checkGuess(props.id) \r\n    } style={style}/>\r\n      \r\n      \r\n      \r\n// </div>\r\n\r\n);\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./style.css\";\r\nfunction Jumbotron(props) {\r\n  return (\r\n    <div\r\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\"}}\r\n      className=\"jumbotron jumbotron-fluid\">\r\n    \r\n         <h2 class={props.classState} id=\"gameStatus\"> {props.message}</h2>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// This file exports both the List and ListItem components\r\n\r\nexport default function Navbar({ children }) {\r\n  return (\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n       <a class = \"navbar-brand\" href=\"/\">Clicky Game</a>\r\n      <ul class = \"navbar-nav ml-auto\">\r\n       \r\n        {children}\r\n      </ul>\r\n    </nav>\r\n\r\n\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function CardContainer({children }) {\r\n  return <div class='card-columns'>{children}</div>;\r\n}\r\nexport function Container({children }) {\r\n  return <div class='container'>{children}</div>;\r\n}\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Card from \"../components/Card\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n// import Header from \"../components/Header\";\r\nimport images from \"../images.json\";\r\nimport Navbar from \"../components/Navbar\"\r\nimport \"./style.css\";\r\nimport \"./animate.css\";\r\n\r\nimport { Col, Row, CardContainer,Container } from \"../components/Grid\";\r\n// import { List, Row, Container } from \"../components/Grid\";\r\nclass Game extends Component {\r\n    state = {\r\n        clickedCards: [],\r\n        images,\r\n        imageIds: [],\r\n        bestScore: 0,\r\n        currentScore: 0,\r\n        gameMessage: \"Click an image to begin\",\r\n        gameMessageClass:\"\"\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        let arr = this.shuffleMe(this.state.images);\r\n        this.setState({images:arr})\r\n    }\r\n\r\n    shuffleMe = anything => {\r\n        anything.sort(function(a, b) {  \r\n            return 0.5 - Math.random()\r\n        })\r\nreturn anything;\r\n    }\r\n\r\n    checkGuess = guessId => {\r\n      let clickArray = this.state.clickedCards;\r\n      let bestScore = this.state.bestScore;\r\n      let newScore = this.state.currentScore;\r\n      let imageArr = this.state.images;\r\n      newScore++;\r\n      if (newScore > bestScore){\r\n          bestScore = newScore;\r\n      }\r\n      if (clickArray.indexOf(guessId) > -1){\r\n          \r\n          this.gameOver();\r\n      } else if(bestScore == imageArr.length ){\r\nthis.youWin();\r\n      } else {\r\n          clickArray.push(guessId);\r\n         \r\n          let newArr = this.shuffleMe(this.state.images);\r\n          this.setState({gameMessageClass: \"correct\",bestScore: bestScore, currentScore:newScore, clickedCards: clickArray, images:newArr\r\n        , gameMessage: \"Correct! Keep going but don't pick an image you've already picked!\"})\r\n      }\r\n    }\r\n\r\n    gameOver = () => {\r\n        let newArr = this.shuffleMe(this.state.images);\r\n\r\n        this.setState({gameMessageClass: \"wrong\",currentScore:0,clickedCards:[], images:newArr, gameMessage: \"Aww you lost. Game Over! Keep going until you get all 12, unless you're a chicken\"})\r\n    }\r\n    youWin = () => {\r\n        let newArr = this.shuffleMe(this.state.images);\r\n        this.setState({currentScore:0,clickedCards:[], images:newArr, gameMessage: \"Good job you won. Now can you do it again without cheating?\"})\r\n    }\r\n    render() {\r\n        return (\r\n          <div>\r\n                <Navbar>\r\n                    \r\n                    <li className=\"ml-auto\">Current Score: {this.state.currentScore} |\r\n                  Best Score: {this.state.bestScore} </li>\r\n                </Navbar>\r\n                <Jumbotron message={this.state.gameMessage} classState ={this.state.gameMessageClass}/>\r\n                <Container>\r\n                {/* <Col size=\"md-12\"> \r\n            <CardContainer> */}\r\n                {this.state.images.map(image => (\r\n                    <div class=\"animate fadeInLeft\">\r\n                    <Card\r\n                        checkGuess={this.checkGuess}\r\n                        id={image.id}\r\n                        key={image.id}\r\n                        name={image.name}\r\n                        image={image.image}\r\n                    />\r\n                    </div>\r\n                ))}\r\n            {/* </CardContainer>\r\n            </Col> */}\r\n            </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;","import React from \"react\";\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Main from \"./pages/Main\";\n\n\nfunction App() {\n  return (    \n      <div>            \n          <Main />   \n     \n      </div>    \n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}